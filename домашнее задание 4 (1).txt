ЗАДАЧА 1."Файл"

//СОЗДАТЬ файл, ЗАПИСАТЬ в него 10 чисел,ЗАКРЫТЬ, потом вновь ОТКРЫТЬ файл и найти СУММУ чисел
#include <iostream>//библиотека для вывода консоли
#include <fstream>//библлиотека для работы с файлами
using namespace std;//пространство имен стд

int main()
{
    setlocale(0, "");
    //объявление переменных
    string path = "myfile.txt";//путь до файла
    double q;//переменные для записи в файл и чтнения из файла
    ofstream fout(path);
    ifstream fin(path);
    double a;
    //переменная для суммы
    double sum = 0.0;
    //октрыть файл для чтения
    fout.is_open();
    cout << "Введите 10 ЧИСЕЛ через ENTER:\n";
    for (int i = 0; i < 10; i++)//Запись чисел в файл
    {
        cin >> q;
        fout << q << endl;
    }
    fout.close();//закрыть файл
    //открыть для чтения из файла
    fin.is_open();
    if (fin.is_open())
    {
        while (fin >> a)//пока из файла читаются числа
        {
            sum += a;//прибавляем их к сумме
        }
        cout << "Сумма чисел= " << sum << "\n";//выводим сумму
    }
    else
    {
        cout << "Ошибка открытия файла\n";//если файл не откроется
    }
    fin.close();//файл закрывается
    system("pause");
    return 0;
}

ЗАДАЧА 2. "Знак числа"

//Определить знак введенного числа с клавиатуры, числа использовав подпрограмму-функцию
#include<iostream>
using namespace std;

double signFunc(double x)//объявление функции
{
	if (x > 0)//если число положительное, то вернем 1 в соответствии с функцией
	{
		return 1;
	}
	if (x = 0)//если число ==0, то вернем 0 в соответствии с функцией
	{
		return 0;
	}
	else//иначе(если число отриательное), то вернем -1 в соответствии с функцией
	{
		return -1;
	}
}

int main()
{
	setlocale(0, "");//русификация
	double chislo=0.0;//переменная для ввода с клавиатуры
	cout << "Введите число" << endl;//ввод с клавиатуры
	cin >> chislo;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не цифру";
	}
	else
	{
		cout << signFunc(chislo) << endl;//вызов функции sign
	}
	return 0;
}

ЗАДАЧА 3. "Геометрические фигуры"

//Определить знак введенного числа с клавиатуры, числа использовав подпрограмму-функцию
#include <iostream>
#include <cmath>
using namespace std;

double pryamougolnik(double a,double b)//площадь прмоугольника
{
	return a * b;
}
double treugolnik(double a, double b, double p)//площадь треугольника
{
	return sqrt(((a + b + p) / 2) * ((a + b - p) / 2) * ((a - b + p) / 2) * ((b + p - a) / 2));
}
double krug(double r)//площадь круга
{
	double PI = acos(-1.0);//константа числа пи
	return PI * r * r;
}
int main()
{
	setlocale(0, "");//русификация
	//объявления переменных для вычисления площадей
	double a=0.0, b=0.0,e=0.0,t=0.0,y=0.0,r=0.0;
	//вычисление площади прямоугольника
	cout << "Введите первую стороны прямоугольника" << endl;
	cin >> a;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	cout << "Введите вторую стороны прямоугольника" << endl;
	cin >> b;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	if ((a > 0) and (b > 0))//ОДЗ для прямоугольника
	{
		cout << pryamougolnik(a, b) << endl;//вывод площади прямоугольника
	}
	else 
	{
		cout << "Вы ввели число, которое меньше или равно 0"<<endl;
	}
	//вычисление площади треугольника
	cout << "Введите первую строну треугольника" << endl;
	cin >> e;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	cout << "Введите вторую строну треугольника" << endl;
	cin >> t;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	cout << "Введите третью строну треугольника" << endl;
	cin >> y;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	if ((e > 0) and (y > 0) and (t > 0))//ОДЗ для треугольника
	{
		if ((e + t > y) and (e + y > t) and (y + t > e))
		{
			cout << treugolnik(e, t, y) << endl;
		}
		else
		{
			cout << "Вы ввели числа, которые не удовлетворяют ОДЗ треугольника" << endl;
		}
	}
	else 
	{
		cout << "Вы ввели число, которое меньше или равно 0"<<endl;
	}
	//вычисление площади круга
	cout << "Введите радиус круга" << endl;
	cin >> r;
	if (!cin)//проверка на дурака
	{
		cout << "Вы ввели не число"<<endl;
	}
	if (r > 0)
	{
		cout << krug(r) << endl;
	}
	else
	{
		cout << "Вы ввели число, которое меньше или равно 0" << endl;
	}
	return 0;
}

ЗАДАЧА 4. "Былая слава"

#include <iostream>//библиотека для консоли
#include <iomanip>//библиотека для рисования
using namespace std;
int main()
{
    for (int i = 0; i < 13; ++i)//13 потому что в флаге 13 полос
    {
        if (i < 6) //предположим, что в строке с звездами находится 8 звезд, значит столбцов 6
        {
            if (0 == i % 2) {//если строчка четная
                for (int j = 0; j < 8; ++j)
                {
                    cout << "  *";//написать 8 звезд через 2 пробела
                }
                cout.width(60);//после звезд 60 знаков
                cout << setw(60) << setfill('/');//заполни 60 знаков слешами
            }
            else //если строчка нечетная
            {
                cout << " ";//добавь перед строчкой пробел
                for (int j = 0; j < 8; ++j)
                    cout << "*  ";
            }
            cout << '\n';//перенеси указатель на новую строчку
        }
    }
    for (int i = 0; i < 19; ++i)//все строчки после блока с звездами.10 строк с слэшами+9 пропусков
        if (0 != i % 2)
        {
            cout << setw(84) << setfill(' ') << '\n';//заполнение пропусками
        }
        else
        {
            cout << setw(84) << setfill('/') << '\n';//заполнение строки
        }
    return 0;
}

ЗАДАЧА 5. "Синусоида"

#include <iostream>
#include <cmath>
using namespace std;
#define M_PI    3.14159265358979323846
#define X1        -2*M_PI//границы графика
#define X2        2*M_PI    
// синусоида
float func(float x) {
    return sin(x);
}
int main() {
    float epsilon = 0.05;//допустимая погрешность (шаг y/2)
    float y = 1.1;//границы графика
    float step = M_PI / 8.00;// шаг графика
    while (y >= -1.1) //границы графика
    {
        for (float x = X1; x <= X2; x += step)//от -2пи до пи через шаг пи/32
        {
            if (abs(func(x) - y) >= epsilon)//если разница между функцией и шагом больше чем погрешность, то напечатай или ось x или оставь пустое множетсво
            {
                if (abs(y) < epsilon)
                {
                    cout << "-";// печать оси X
                }
                else
                {
                    cout << " ";
                }
            }
            else //иначе построим график
            {
                cout << "*";
            }
            if (abs(x) < epsilon)
            {
                cout << "|";// печать оси Y
            }
        }
        cout << endl;
        y = y - 0.1;
    }
    return 0;
}

ЗАДАЧА 6. "Автоматный распределитель"

#include <iostream>//для консоли
#include <Windows.h>//для русификации всего
using namespace std;//пространство имен стд
int main() 
{
	//русификация
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	//объявление переменных
	string RomeAlphabet = "IVXLCDM", userRomeWord = "";
	int res = 0;//результат (сумма из веденных пользователем чисел)
	int numsMassive[7] = { 1, 5, 10, 50, 100, 500, 1000 };
	//ввод римской цифры
	cout << "Введите любое римское число: ";
	cin >> userRomeWord;
	for (int i = 0; i < userRomeWord.size() - 1; i++) //от первого элемента вводимых значений до последнего
	{
		bool proverka = false;
		for (int j = 0; j < RomeAlphabet.size(); j++) //сравним каждый элемент пользовательского ввода с римским алфавитом (если они равны, то проверка будет правдой, иначе ложью,своеобразная проверка на дурака)
		{
			if (userRomeWord[i] == RomeAlphabet[j]) //рассмотрим случаи, когда слева стоит меньшая цифра, а справа большая, а значит, что они вычитаются
			{
				proverka = true;
				res += numsMassive[j];
				if (userRomeWord[i] == RomeAlphabet[0] and ((userRomeWord[i + 1] == RomeAlphabet[1]) or (userRomeWord[i + 1] == RomeAlphabet[2])))
					res -= 2;
				if (userRomeWord[i] == RomeAlphabet[2] and ((userRomeWord[i + 1] == RomeAlphabet[3]) or (userRomeWord[i + 1] == RomeAlphabet[4])))
					res -= 20;
				if (userRomeWord[i] == RomeAlphabet[4] and ((userRomeWord[i + 1] == RomeAlphabet[5]) or (userRomeWord[i + 1] == RomeAlphabet[6])))
					res -= 200;
				break;
			}
		}
		if (proverka == false)//проверка на дурака
		{
			cout<< "Ошибка ввода";
			return 0;
		}
	}
	for (int l = 0; l < RomeAlphabet.size(); l++) //пройдемся по всему римскому алфавиту
	{
		if (userRomeWord[userRomeWord.size() - 1] == RomeAlphabet[l]) //если элемент пользовательского ввода равен римскому алфавиту, и он не остановился на проверке вычитания, следовательно прибавим этот элемент к результату
		{
			res += numsMassive[l];
			cout<< " Данное римское число равняется "<< res << endl;
			break;
		}
	}
}

ЗАДАЧА 7. "Генератор псевдослучайных чисел"

#include <iostream>//для консоли
#include <cstdlib>//для русификации всего
#include <random>//для создания случайного числа
using namespace std;//пространство имен стд
int main()
{
	//вихрь Мерсенна
	random_device rd;
	mt19937 mersenne(rd());
	setlocale(0, "");//русифкация
	int m=0, b=0, c=0,res=0;
	cout << "Введите 3 целочисленных значения по формуле s(i+1)=(m*s(i)+b)*mod(c). Значение m:" << endl;
	cin >> m;//ввод переменной
	if (!cin)//проверка на дурака
	{
		cout << "Ошибка ввода" << endl;
		return 0;
	}
	cout << "Значение b" << endl;
	cin >> b;//ввод переменной
	if (!cin)//проверка на дурака
	{
		cout << "Ошибка ввода" << endl;
		return 0;
	}
	cout << "Значение c" << endl;
	cin >> c;//ввод переменной
	if (!cin)//проверка на дурака
	{
		cout << "Ошибка ввода" << endl;
		return 0;
	}
	for (int r = 0; r < mersenne(); r++)//от первого круга рекурсии до последнего ( число кругов определется рандомно с помощбю Вихря Мерсенна)
	{
		res = (res*m + b) % c;
		r++;
	}
	cout << "У рекурсии " << mersenne() << " кругa(ов).\nПсведорандомное число: " << res << endl;//вывод
}

ЗДАЧА 8. "Умножение матриц"

//если нужен ввод данных, раскоментируйте строчки 61-89
#include<iostream>//для коноли
using namespace std;//пространство имен стд
double maxfunc(double a, double b, double c)
{
	double maxv = max(a, max(b, c));//нахождение минимальной и максимальной выручки
	if (maxv == a)
	{
		cout << " первый продавец: " ;
	}
	if (maxv == b)
	{
		cout << " второй продавец: ";
	}
	if (maxv == c)
	{
		cout << " третий продавец: ";
	}
	return maxv;
}
double minfunc(double a, double b, double c)
{
	double minv = min(a, min(b, c));
	if (minv == a)
	{
		cout << " первый продавец: ";
	}
	if (minv == b)
	{
		cout << " второй продавец: ";
	}
	if (minv == c)
	{
		cout << " третий продавец: ";
	}
	return minv;
}
int main()
{
	setlocale(0, "");//русификация
	//------------------------------------------------------объявление переменных
	//в матрице А номер строки соответсвует продавцу, а номер столбца виду товара
	double a[3][4] = {
		{5.00,2.00,0.00,10.00},
		{3.00,5.00,2.00,5.00},
		{20.00,0.00,0.00,0.00}
	};
	double b[4][2] = {
		{1.20,0.50},
		{2.80,0.40},
		{5.00,1.00},
		{2.00,1.50}
	};//в матрице B номер строки значат вид товара, а номер столбаца цену и комиссионные
	double c[3][2] = {
		{0,0},
		{0,0},
		{0,0}
	};
	double v1 = 0.0, v2 = 0.0, v3 = 0.0, maxv = 0.0, minv = 0.0, kom1 = 0.0, kom2 = 0.0, kom3 = 0.0, maxkom, minkom;
	////ввод данных
	////------------------------------------------------------
	//cout << "1 продавец\nКоличество 4 товаров: ";
	//cin >> a[0][0];
	//cin >> a[0][1];
	//cin >> a[0][2];
	//cin >> a[0][3];
	//cout << "\n2 продавец\nКоличество 4 товаров: ";
	//cin >> a[1][0];
	//cin >> a[1][1];
	//cin >> a[1][2];
	//cin >> a[1][3];
	//cout << "\n3 продавец\nКоличество 4 товаров: ";
	//cin >> a[2][0];
	//cin >> a[2][1];
	//cin >> a[2][2];
	//cin >> a[2][3];
	//cout << "\nЦена и комиссионные 1 товара";
	//cin >> b[0][0];
	//cin >> b[0][1];
	//cout << "\nЦена и комиссионные 2 товара";
	//cin >> b[1][0];
	//cin >> b[1][1];
	//cout << "\nЦена и комиссионные 3 товара";
	//cin >> b[2][0];
	//cin >> b[2][1];
	//cout << "\nЦена и комиссионные 4 товара";
	//cin >> b[3][0];
	//cin >> b[3][1];
	//------------------------------------------------------соответсвтующие вычисления
	c[0][0] = a[0][0] * b[0][0] + a[0][1] * b[1][0] + a[0][2] * b[2][0] + a[0][3] * b[3][0];
	c[0][1] = a[0][0] * b[0][1] + a[0][1] * b[1][1] + a[0][2] * b[2][1] + a[0][3] * b[3][1];
	c[1][0] = a[1][0] * b[0][0] + a[1][1] * b[1][0] + a[1][2] * b[2][0] + a[1][3] * b[3][0];
	c[1][1] = a[1][0] * b[0][1] + a[1][1] * b[1][1] + a[1][2] * b[2][1] + a[1][3] * b[3][1];
	c[2][0] = a[2][0] * b[0][0] + a[2][1] * b[1][0] + a[2][2] * b[2][0] + a[2][3] * b[3][0];
	c[2][1] = a[2][0] * b[0][1] + a[2][1] * b[1][1] + a[2][2] * b[2][1] + a[2][3] * b[3][1];
	cout << "Результат умножения матриц: " << endl;
	cout << c[0][0] << " " << c[0][1] << " \n" << c[1][0] << "   " << c[1][1] << " \n" << c[2][0] << "     " << c[2][1];//вывод умножения матриц
	cout << "\n1)Выручка равна сумме элементов строки, поэтому наибольшую выручку получил ";
	cout << maxfunc(c[0][0] + c[0][1], c[1][0] + c[1][1], c[2][1] + c[2][0]) << endl;
	cout << "Наименьшую выручку получит ";
	cout<< minfunc(c[0][0] + c[0][1], c[1][0] + c[1][1], c[2][1] + c[2][0]) << endl;
	//------------------------------------------------------номер 2
	cout << "2)Комиссионные это элемент второго столбца матрицы С,то наибольшие комиссионные получит";
	cout << maxfunc(c[0][1], c[1][1], c[2][1]) << endl;
	cout << "Наименьшие комиссионные получит";
	cout<< minfunc(c[0][1], c[1][1], c[2][1]) << endl;
	cout << "3)Общая сумма денег это сумма элементов первого столбца матрицы С:" << c[0][0] + c[1][0] + c[2][0] << endl;
	cout << "4)Общая сумма комиссионных это сумма второго столбца матрицы С: " << c[0][1] + c[1][1] + c[2][1] << endl;
	cout << "5)Общая сумма денег, которая прошла через руки продавцов, равна сумме двух предыдущих значений, а значит сумме всех эелементов матрицы С: " << c[0][0] + c[1][0] + c[2][0] + c[0][1] + c[1][1] + c[2][1] << endl;
}

ЗАДАЧА 9. "Системы счисления"

#include <iostream>
#include <string>
using namespace std;

int main()
{
    //объявление переменных
    string informacia, alph = "0123456789ABCDEF";//informacia-информация,alph-символы, которые выводятся в консоль
    int len, from, to, alph_key[16] = { 0, 1, 2, 3, 4, 5,6, 7, 8, 9,10, 11, 12, 13, 14, 15 }, dot_pos = 0, k = 0, int_decoded[256], fl_decoded[15];
    int power = 0, c_part = 0;//len-количество символов в строке,from и to - системы счисления соответственно предущее и последующее
    //alph_key-максимальная разрядность числа,k-место точки,int/fl_decoded-соответственные части числа, которые будут выводится в консоль
    //с_part-округленное число, которое является дробной частью выводимого в консоль числа 
    bool dot = false, minus = false;//
    float ten_num = 0;

    setlocale(0, "");//русификация
    cout << "Введите число системы счисления от 2 до 16, первоначальную систему счисления и последующую систему счисления \n";
    cin >> informacia;
    if (!(cin >> from >> to) || getchar() != '\n') 
    {
        cout << "Error!";
        exit(0);
    }
    len = informacia.size();//количество символов введенных данных
    int* coded = new int[len];
    for (int i = 0; i < len; i++)//цикл проходится по массиву введенных данных
    {
        if (informacia[i] == '-' && i == 0) //если первый символ это минус
        {
            minus = true;
        }
        else if (alph.find(informacia[i]) != string::npos) //иначе если в массиве веденных данных находится массив алфавита
        {
            if (alph.find(informacia[i]) >= from)//если количество совпадающих символов между введенным массивом и данными больше или равно с данными, то выведем ошибку
            {
                cout << "Ошибка ввода данных";
                exit(0);
            }
            if (informacia[i] != '-' && informacia[i] != '.') //если символ не равен минусу или точке, то введи адресс в 16-ой СС
            {
                coded[i] = alph_key[alph.find(informacia[i])];
            }
        }
        else if (informacia[i] == '.' && dot == false && i != 0)//если символ это точка, а индикатор очки отрицателен и номер символа не первый, то оозначим позицию точки и включим его индикатор
        {
            dot = true;
            dot_pos = i;
        }
        else 
        {
            cout << "Error!";
            exit(0);
        }

    }
    if (dot_pos == 0)//если точка на первыом месте
    {
        dot_pos = len;//то длина слова=0
    }
    for (int i = minus; i < dot_pos; i++)//от места минуса до места точки
    {
        if (i != dot_pos)//если символ не равен точке,то:
        {
            ten_num += coded[i] * pow(from, dot_pos - i - 1);//начинается перевод: число умножается на число изначальной СС в соответсвующей степени 
        }
    }
    for (int i = dot_pos + 1; i < len; i++)//от точки до конца слова
    {
        ten_num += coded[i] * pow(from, dot_pos - i);//начинается перевод: число умножается на число изначальной СС в соответсвующей степени 
    }
    int int_part = ten_num;//разделение числа на целое и дробное
    float float_part = ten_num - int_part;
    while (int_part > 0)//переводим отдельно целочисленную часть и дробную часть, пишем минус если число отрицательное
    {

        int_decoded[k] = int_part % to;
        int_part /= to;
        k++;
    }
    if (minus)
    {
        cout << "-";
    }
    for (int i = k - 1; i > -1; i--)//напиши число до точки
    {
        cout << alph[int_decoded[i]];
    }

    cout << ".";
    while (true)
    {
        if (power > 14)
        {
            break;
        }
        float_part *= to;
        c_part = floor(float_part);//округление до меньшего целого числа
        fl_decoded[power] = c_part;//занесение в соответсвующий массив
        if (float_part - c_part == 0)//если дошли до конца прерви цикл
        {
            break;
        }
        float_part -= c_part;//иначе вычти и пройди цикл заново
        power++;
    }
    for (int i = 0; i <= power; i++)
    {
        cout << alph[fl_decoded[i]];//вывести дробную часть
    }
    return 0;
}