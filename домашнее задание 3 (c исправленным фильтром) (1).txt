Номер 1 ЗАЕМ

#include <iostream>//библиотека для консоли
#include <cstdlib>
#include <cmath>//библиотека для логарифма
using namespace std;//пространство имен

int main()
{
	setlocale(0, "");//русификация консоли
	double s, p, n, r;//ввод переменных
	cout << "Введите займ S(руб.)" << endl;
	cin >> s;
	if (!cin) {//проверка на дурака
		cout << "Ввод неверен" << endl;
		return 0;
	}
	cout << "Введите n лет, на которой брался займ" << endl;
	cin >> n;
	if (!cin) {//проверка на дурака
		cout << "Ввод неверен" << endl;
		return 0;
	}
	cout << "Введите процент p" << endl;
	cin >> p;
	if (!cin) {//проверка на дурака
		cout << "Ввод неверен" << endl;
		return 0;
	}
	if ((s <= 0) || (p < 0) || (n < 0)||(p>=100)) {//проверка на дурака
		cout << "Ввод неверен" << endl;
		return 0;
	}
	r = p / 100;
	cout << "Ежемесячная плата: " << (s * r * pow(1 + r, n)) / (12.0 * (pow(1 + r, n) - 1));//вычисление заема
	return 0;
}

Номер 2 ССУДА

#include <iostream>//библеотека для консоли
#include <cmath>//библиотека для степени
#include <math.h>
using namespace std;

int main()
{
	setlocale(LC_ALL, "russian");//русификация консоли
	int S, m, n;
	double p, r, m1;
	m1 = 0;
	cout << "Введите кол-во лет: ";//ввод перменных
	cin >> n;
	if (!cin) {//проверка на дурака
		cout << "Ввод некоректен" << endl;
		return 0;
	}
	cout << "Введите сумму ссуды: ";
	cin>> S;
	if (!cin) {//проверка на дурака
		cout << "Ввод некоректен" << endl;
		return 0;
	}
	cout<< "Введите размер месячной выплаты: ";
	cin>> m;
	if (!cin) {//проверка на дурака
		cout << "Ввод некоректен" << endl;
		return 0;
	}
	for (p = 0.001; m1 < m; p=p+0.001)
	{
		r = p / 100;//вычисление
		m1 = (S * r * (pow((1+r),n)) )/( 12 * ( (pow((1+r),n)-1) ));
		if (m1 > m) {
			cout << "Кредит давался под " << p << "%" << endl;
		}
	}
	system("pause");
	return 0;
}

Номер 3 КОПИРОВАНИЕ ФАЙЛА (работает только с английскими буквами)

//Создать на диске текстовый файл и скопировать его на экран
#include <iostream>//библиотека для консоли
#include <fstream>//библиотека для ofstream/ifstream
using namespace std;//пространство имен стд
#include <string>//библиотека для работы с строками
#include <windows.h>//для вывода кириллициы

int main()
{
	string path = "myfile.txt";//путь до файла
	//объявление переменных
	ofstream fout;
	ifstream fin;
	char msg[1048576];//1048576 потому что именно 1024*1024=1048576 символа вмещаются в файл txt
	//октрытие файла для записи
	fout.open(path);
	cout << "Введите ваши данные: " << endl;
	cin.getline(msg, 1048576);//ввод данных(не >> потому что он идет до первого последнего, а они в строках возможны, поэтому используем getline)
	fout << msg;
	fout.close();

	*msg = 0;
	//открытие файла для чтения
	fin.open(path);

	fin.getline(msg,1048576);//чтение данных с помощью getline ( по причине, которая написана выше)

	fin.close();

	cout << msg;//вывод данных в консоль
	cin.get();
}

Номер 4 ФИЛЬТР

#include <iostream>
#include <fstream>
#include <string>
using namespace std;
//Фильтр. Вывести на экран только числа из созданного Вами на диске текстового файла, содержащего буквы и числа
//Данные, которые мы вводим 12 -23 3.4 -5.64 22qwerty 777 -67qe 7.7.6.4 6...8 —----8 9999
int main()
{
    //объявление переменных
    string pravilno = "1234567890.-",informacia,zapis;
    char konechnaya_zapis[255];
    int last_pos = 0;
    bool dot=false,minus=false,uslovia=true;
    //русификация
    setlocale(0, "");
    //ввод и открытие файла для ввода
    cout << "Числа в строке. Введите строку\n";
    getline(cin, informacia);
    ofstream fout("myfile.txt");
    fout << informacia;
    fout.close();//закрытие файла для ввода
    ifstream fin("myfile.txt");//открытие и создание файла для чтения
    getline(fin, zapis);//запись из файла в переменную
    fin.close();//закрытие файла для чтения
    int sz = zapis.size();//количество знаков в файле
    cout << "Числа:\n";
    for (int i = 0; i < sz; i++)//пройдемся по всему файлу
    {
        if (zapis[i] == ' ' && uslovia)//если знак в файле это пробел и условия соблюдены
        {
            if (konechnaya_zapis[last_pos - 1] != '.')//если предыдущий знак отфильтрованного массива это не точка
            {
                for (int j = 0; j < last_pos; j++)//напиши все то, что написано до точки(включительно)
                {
                    cout << konechnaya_zapis[j];
                }
                cout << ' ';
            }
            //обнуляем значения до первоначальных
            memset(konechnaya_zapis, 0, sizeof(konechnaya_zapis));
            last_pos = 0;
            dot = false;
            uslovia = true;
            continue;
        }
    if (zapis[i] == ' ' && !uslovia)
    {
        //обнуляем значения до первоначальных
        uslovia = true;
        last_pos = 0;
        dot = false;
        memset(konechnaya_zapis, 0, sizeof(konechnaya_zapis));
        continue;
    }
    if (uslovia) 
    {
        if (pravilno.find(zapis[i]) == string::npos)//если элемент не совпадает с символом из массива правильных знаков, то условие не удовлетворено
        {
            uslovia = false;
        }

        if (zapis[i] == '-' && last_pos != 0)//если элемент это - и он не на первом место, то условие не удовлетворено
        {
            uslovia = false;
        }

        if (zapis[i] == '.' && (dot || last_pos == 0)) //если элемеет это точка и их больше чем 2 или она находится на первой позиции то условия также не удовлетворены
        {
            uslovia = false;
        }
        else if (zapis[i] == '.' && !dot)//если элемент это точка и она одна, то условия удовлетворены
        {
            dot = true;
        }

        if (uslovia)//если все условия соблюдены
        {
            konechnaya_zapis[last_pos] = zapis[i];//запиши в конечную информацию отфильтрованные значения, а указатель в конечных значениях перемещается на следующее место
            last_pos += 1;
        }
        else//если условия не удовлетворены
        {
            //обнули значения до первоначальных
            memset(konechnaya_zapis, 0, sizeof(konechnaya_zapis));
            last_pos = 0;
            dot = false;
        }
    }
}
    if (uslovia && konechnaya_zapis[last_pos - 1] != '.')//если условия удовлетворены и предыдущий элемент конечной запиши это не точка
    {
        for (int j = 0; j < last_pos; j++)//то напиши все значения до точки
        {
            cout << konechnaya_zapis[j];
        }
    }
    return 0;
}

Номер 5 СОРТИРОВКА БУКВ

//Задать строку из 30 букв и расставить их в алфавитном порядке
#include <iostream>
#include <cstdlib>
#include <string>
using namespace std;
void g(int arr[], const int si)//функция
{
	string sob = "", b = "", m = "", W = "";//sob-собрать все буквы ,b-большие буквы ,m-маленькие буквы ,W-массив букв (отсортированный) 
	char sim;//
	bool b1 = 0, m1 = 0;//true/false
	for (int j = 0; j < si; j++)//счетчик 1
	{
		for (int i = 0; i < si - 1 - j; i++)//счетчик 2
		{
			if (arr[i] > arr[i + 1])//если этот элемент больше предыдущего, то поменяй их местами
			{
				arr[i] += arr[i + 1];
				arr[i + 1] = arr[i] - arr[i + 1];
				arr[i] = arr[i] - arr[i + 1];
			}
		}

	}
	for (int i = 0; i < si; i++)//для константы от единичного элемента до последнего
	{
		if ((arr[i] >= 65) && (arr[i] <= 90))//если элемент >=A и <=Z
		{
			b += arr[i];//Большие буквы
		}
		else
		{
			m += arr[i];//маленькие буквы
		}
		sob += arr[i];//все буквы
	}
	for (int i = 65; i < 90; i++)//от a до z
	{
		sim = i;//код аски
		for (int x = 0; x < b.length(); x++)//счетчик
		{
			if (sim == b[x])//если код аски совпадает с массивом больших букв
			{
				W += b[x];//большие буквы
				b1 = 1;
			}
		}
		sim = i + 32;//разница между прописными и строчными буквами
		for (int j = 0; j < m.length(); j++)//счетчик1
		{
			if (sim == m[j])//если код аски совпадает с массивом маленьких букв
			{
				W += m[j];//маленькие буквы
				m1 = 1;
			}
		}
		if (m1 || b1)//если нашлась маленькая или большая буква
		{
			W += ' ';//прибываляется пробел между буквами
		}
		b1 = 0;//нахождение маленьких и больших букв обнуляется
		m1 = 0;
	}
	cout << W << endl;//w-исходный массив

}
int main()
{
	setlocale(0, "");
	char st[30];//строка вводимая пользователем
	int prov = 0;//проверка на 30 чисел
	const int size = 30;//количество букв, которое может ввести пользователь
	cout << "Введите буквы" << endl;
	cin >> st;
	if (strlen(st) == 30)//если пользователь не ошибся и ввел 30 букв
	{
		int a[30];
		for (int i = 0; i < 30; i++)//счетчик
		{
			if (((st[i] >= 65) && (st[i] <= 90)) || ((st[i] >= 97) && (st[i] <= 122)))//если массив, который ввел пользователь, принадлежит данному промежутку кодировки аский
			{
				a[i] = st[i];//приравняем к массиву, который мы занесем в функцию
			}
			else
			{
				prov = 1;
				break;
			}
		}
		if (prov == 1)
		{
			cout << "Вы ввели не буквы" << endl;
		}
		else
		{
			cout << endl;
			g(a, size);
		}
	}
	else
	{
		cout << "Вы ввели не 30 символов" << endl;
	}
	system("pause");
}